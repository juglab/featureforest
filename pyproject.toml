# https://peps.python.org/pep-0517/

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"
# read more about configuring hatch at:
# https://hatch.pypa.io/latest/config/build/

# https://hatch.pypa.io/latest/config/metadata/
[tool.hatch.version]
source = "vcs"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
only-include = ["src"]
sources = ["src"]

# https://peps.python.org/pep-0621/
[project]
name = "featureforest"
dynamic = ["version"]
description = "A napari plugin for segmentation using vision transformer models' features"
readme = "README.md"
requires-python = ">=3.8"
license = { text = "BSD-3-Clause" }
authors = [
    { name = "Mehdi Seifi", email = "mehdi.seifi@fht.org" },
    { name = "Vera Galinova", email = "vera.galinova@fht.org" },
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Framework :: napari",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: BSD License",
    "Topic :: Scientific/Engineering :: Image Processing",
]
dependencies = [
    "numpy==1.23.5",
    "torch==2.1.2",
    "torchvision==0.16.2",
    "opencv-python",
    "scikit-learn",
    "scikit-image",
    "matplotlib",
    "pynrrd",
    "PyQt5",
    "magicgui",
    "qtpy",
    "napari",
    "h5py",
    "pooch",
    "timm",
    "segment-anything-py",
    "segment-anything-hq",
]
[project.optional-dependencies]
# development dependencies and tooling
dev = [
    "pre-commit",
    "pytest",
    "pytest-cov",
    "tox",
    "tox-gh-actions",
    "sybil",      # doctesting
]
[project.urls]
homepage = "https://featureforest.github.io/"
repository = "https://github.com/juglab/featureforest"


[tool.pytest.ini_options]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]


[tool.black]
line-length = 90
target-version = ['py38', 'py39', 'py310']


[tool.ruff]
line-length = 90
target-version = "py38"
src = ["src"]
select = [
    "E", "F", "W", #flake8
    "UP", # pyupgrade
    "I", # isort
    "BLE", # flake8-blind-exception
    "B", # flake8-bugbear
    "A", # flake8-builtins
    "C4", # flake8-comprehensions
    "ISC", # flake8-implicit-str-concat
    "G", # flake8-logging-format
    "PIE", # flake8-pie
    "SIM", # flake8-simplify
]
ignore = [
    "E501", # line too long. let black handle this
    "UP006", "UP007", # type annotation. As using magicgui require runtime type annotation then we disable this.
    "SIM117", # flake8-simplify - some of merged with statements are not looking great with black, reanble after drop python 3.9
]

exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".mypy_cache",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "*vendored*",
    "*_vendor*",
]

show-fixes = true
